From 002fbbc1d8091b846584178a234360842566cacf Mon Sep 17 00:00:00 2001
From: Amadeu Andrade Barbosa Junior <amadeu.barbosa@intelie.com.br>
Date: Sat, 26 Jun 2021 15:38:24 -0300
Subject: [PATCH] Binding the component properties and parsing JSON

---
 src/App.tsx                         |  2 +-
 src/components/Formulario/index.tsx |  4 +--
 src/components/LineChart/index.tsx  | 40 +++++++++++++++++------------
 3 files changed, 27 insertions(+), 19 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 8df663e..502acbe 100644
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -7,7 +7,7 @@ import Formulario from "components/Formulario/index";
 import LineChart from "components/LineChart/index";
 
 const App = () =>  {
-   const  [usertext, updateText] = useState({}); 
+   const  [usertext, updateText] = useState(""); 
     
   return (
   <>
diff --git a/src/components/Formulario/index.tsx b/src/components/Formulario/index.tsx
index 4572aba..9811265 100644
--- a/src/components/Formulario/index.tsx
+++ b/src/components/Formulario/index.tsx
@@ -19,14 +19,14 @@ const Formulario = (props: any) => {
         event.preventDefault();
         console.log (usertext);
         
-        props.updateText ({usertext});
+        props.updateText (usertext);
 
     }
    
 
     return(
         <Form onSubmit = {onSubmitClick}>
-             <Form.Group controlId="exampleForm.ControlTextarea1">
+             <Form.Group>
                  <Form.Control  defaultValue= {"usertext"}  id="localtext"
                   as="textarea" onChange={onTextChange}  rows={3}  />
             </Form.Group>
diff --git a/src/components/LineChart/index.tsx b/src/components/LineChart/index.tsx
index fe606a5..4d2b74d 100644
--- a/src/components/LineChart/index.tsx
+++ b/src/components/LineChart/index.tsx
@@ -16,10 +16,26 @@ interface State{
     begin? : number,
     end?: number,
 }
-const BarChart= (props : any ) => {
-    
-    const [usertext, uptadeText] = useState<seriesData[]>([]);
 
+interface Series {
+    name: string
+    data: number[]
+}
+const parsingSeries = (input: string) : Series | null => {
+    try {
+        return JSON.parse(input)
+    } catch (e) {
+        console.error("The input provided is not a valid JSON", e)
+    }
+    return null
+}
+
+interface LineChartProps {
+    usertext: string
+}
+const LineChart= ({usertext} : LineChartProps ) => {
+
+    const chartData = parsingSeries(usertext)
 
     useEffect(()=>{
         function updateText(){
@@ -35,27 +51,19 @@ const BarChart= (props : any ) => {
         },
 
     };
-    
-    const chartData = {        
-        series: [{usertext}],
 
-    
-    }; 
-      
-  
-      
   return(
         <div>
-            <Chart
+            {usertext ? <Chart
                 options ={options}
-                series = {chartData.series }
+                series = {[chartData]}
                 type = "line"
                 height = "240"
-            />
-            {usertext && <p> My text is {JSON.stringify(usertext)}  </p>}  
+            /> : <p> Unable to render the chart since the input is not a valid JSON</p>}
+            {usertext && <p> My text is {usertext}  </p>}
             
         </div>          
     );
   
 }
- export default BarChart;
\ No newline at end of file
+ export default LineChart;
\ No newline at end of file
-- 
2.30.2

